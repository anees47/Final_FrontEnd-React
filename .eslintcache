[{"/Users/sneharam/Documents/React/client/src/index.js":"1","/Users/sneharam/Documents/React/client/src/App.js":"2","/Users/sneharam/Documents/React/client/src/reportWebVitals.js":"3","/Users/sneharam/Documents/React/client/src/components/auth/Login.jsx":"4","/Users/sneharam/Documents/React/client/src/components/auth/Register.jsx":"5","/Users/sneharam/Documents/React/client/src/redux/store/store.js":"6","/Users/sneharam/Documents/React/client/src/redux/reducers/index.js":"7","/Users/sneharam/Documents/React/client/src/redux/reducers/authReducer.js":"8","/Users/sneharam/Documents/React/client/src/redux/actions/types.js":"9","/Users/sneharam/Documents/React/client/src/redux/actions/authAction.js":"10","/Users/sneharam/Documents/React/client/src/components/auth/Usage.jsx":"11","/Users/sneharam/Documents/React/client/src/components/layouts/Footer.jsx":"12","/Users/sneharam/Documents/React/client/src/components/layouts/Landing.jsx":"13","/Users/sneharam/Documents/React/client/src/components/layouts/Header.jsx":"14","/Users/sneharam/Documents/React/client/src/redux/actions/authheader.js":"15"},{"size":500,"mtime":1607359600568,"results":"16","hashOfConfig":"17"},{"size":1241,"mtime":1607959778483,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607359600569,"results":"19","hashOfConfig":"17"},{"size":2729,"mtime":1607960024697,"results":"20","hashOfConfig":"17"},{"size":3539,"mtime":1607715029129,"results":"21","hashOfConfig":"17"},{"size":609,"mtime":1607628587079,"results":"22","hashOfConfig":"17"},{"size":140,"mtime":1607712936640,"results":"23","hashOfConfig":"17"},{"size":843,"mtime":1607960575249,"results":"24","hashOfConfig":"17"},{"size":296,"mtime":1607972666802,"results":"25","hashOfConfig":"17"},{"size":1206,"mtime":1607972678384,"results":"26","hashOfConfig":"17"},{"size":764,"mtime":1607972870467,"results":"27","hashOfConfig":"17"},{"size":273,"mtime":1607959189796,"results":"28","hashOfConfig":"17"},{"size":961,"mtime":1607972796968,"results":"29","hashOfConfig":"17"},{"size":3174,"mtime":1607973815526,"results":"30","hashOfConfig":"17"},{"size":258,"mtime":1607924045638,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"f117u2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/sneharam/Documents/React/client/src/index.js",[],["67","68"],"/Users/sneharam/Documents/React/client/src/App.js",["69","70"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/layouts/Header\";\nimport Landing from \"./components/layouts/Landing\";\nimport Footer from \"./components/layouts/Footer\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Usage from \"./components/auth/Usage\";\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport store from \"./redux/store/store\";\nconst postlist = [\n  { id: 1, content: \"This world will be out of pandemic soon\", user: \"neha\" },\n  { id: 2, content: \"Hello from Neha\", user: \"neharam\" },\n  { id: 3, content: \"How r u\", user: \"neha\" },\n  { id: 4, content: \"Im fine\", user: \"neharam\" },\n];\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Header></Header>\n          <Route exact path=\"/\" component={Landing}></Route>\n          <Route exact path=\"/login\" component={Login}></Route>\n          <Route exact path=\"/register\" component={Register}></Route>\n          <Route exact path=\"/usage\" component={Usage}></Route>\n          <Footer></Footer>\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/sneharam/Documents/React/client/src/reportWebVitals.js",[],"/Users/sneharam/Documents/React/client/src/components/auth/Login.jsx",["71","72","73"],"import React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/actions/authAction\";\nimport { Redirect } from \"react-router-dom\";\nexport const Login = ({ login, isAuthenticated }) => {\n  //const [data,settterfunction]= useState({initail data})\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n  const { username, password } = formData;\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Final state: \" + username);\n    console.log(\"password\" + password);\n    const loginUser = {\n      username: username,\n      password: password,\n    };\n\n    login(username, password);\n\n    //localStorage.setItem('data',JSON.stringify(response.data))\n  };\n\n  if (isAuthenticated) {\n    const user = JSON.parse(localStorage.getItem(\"data\"));\n    if (user.roles.includes(\"ROLE_ADMIN\")) {\n      return <Redirect to=\"/dashboard1\"></Redirect>;\n    } else {\n      return <Redirect to=\"/usage\"></Redirect>;\n    }\n  }\n  return (\n    <div className=\"login\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Log In</h1>\n            <p className=\"lead text-center\">\n              Sign in to your DevConnector account\n            </p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={handleChange}\n                />\n              </div>\n              <input\n                type=\"submit\"\n                value=\"Login\"\n                className=\"btn btn-info btn-block mt-4\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { login })(Login);\n","/Users/sneharam/Documents/React/client/src/components/auth/Register.jsx",["74","75"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../redux/actions/authAction\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Register = ({ registerUser, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const { username, email, password, password2 } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    //when state of controller is changing then we are holding that changed value in state\n  };\n  const onSubmit = (e) => {\n    const newUser = {\n      username: username,\n      email: email,\n      password: password,\n      role: [\"user\"],\n    };\n    e.preventDefault();\n    console.log(\"hello from submit\");\n    console.log(JSON.stringify(formData));\n    if (password !== password2) {\n      console.log(\"problem\");\n    } else {\n      //action\n      registerUser(formData);\n    }\n  };\n  if (isAuthenticated === true) {\n    return <Redirect to=\"/dashboard\"></Redirect>;\n  }\n\n  return (\n    <div className=\"register\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Sign Up</h1>\n            <p className=\"lead text-center\">Create your DevConnector account</p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Name\"\n                  name=\"username\"\n                  required\n                  value={username}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChange}\n                />\n                <small className=\"form-text text-muted\">\n                  This site uses Gravatar so if you want a profile image, use a\n                  Gravatar email\n                </small>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  value={password2}\n                  onChange={onChange}\n                />\n              </div>\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  registerUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAusAuthenticated: state.auth.issAuthenticated,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { registerUser })(Register);\n","/Users/sneharam/Documents/React/client/src/redux/store/store.js",[],"/Users/sneharam/Documents/React/client/src/redux/reducers/index.js",[],"/Users/sneharam/Documents/React/client/src/redux/reducers/authReducer.js",["76","77"],"import {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  ACCESS_SUCCESS,\n} from \"../actions/types\";\nimport authHeader from \"../actions/authheader\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  loading: true,\n  user: null,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return { ...state, ...payload, isAuthenticated: true };\n    case LOGIN_SUCCESS:\n      return { ...state, ...payload, isAuthenticated: true };\n    case LOGOUT:\n      return { ...state, token: null, isAuthenticated: false, user: null };\n\n    case LOGOUT:\n      return {\n        ...state,\n        token: localStorage.getItem(\"token\"),\n        isAuthenticated: true,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/sneharam/Documents/React/client/src/redux/actions/types.js",[],"/Users/sneharam/Documents/React/client/src/redux/actions/authAction.js",[],"/Users/sneharam/Documents/React/client/src/components/auth/Usage.jsx",["78","79"],"/Users/sneharam/Documents/React/client/src/components/layouts/Footer.jsx",[],"/Users/sneharam/Documents/React/client/src/components/layouts/Landing.jsx",[],"/Users/sneharam/Documents/React/client/src/components/layouts/Header.jsx",["80","81"],"/Users/sneharam/Documents/React/client/src/redux/actions/authheader.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"90","line":13,"column":7,"nodeType":"88","messageId":"89","endLine":13,"endColumn":15},{"ruleId":"86","severity":1,"message":"91","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"92","line":18,"column":11,"nodeType":"88","messageId":"89","endLine":18,"endColumn":20},{"ruleId":"86","severity":1,"message":"93","line":88,"column":7,"nodeType":"88","messageId":"89","endLine":88,"endColumn":25},{"ruleId":"86","severity":1,"message":"94","line":21,"column":11,"nodeType":"88","messageId":"89","endLine":21,"endColumn":18},{"ruleId":"86","severity":1,"message":"93","line":112,"column":7,"nodeType":"88","messageId":"89","endLine":112,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":15,"column":1,"nodeType":"97","endLine":36,"endColumn":3},{"ruleId":"98","severity":1,"message":"99","line":26,"column":5,"nodeType":"100","messageId":"101","endLine":32,"endColumn":9},{"ruleId":"86","severity":1,"message":"91","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"93","line":32,"column":7,"nodeType":"88","messageId":"89","endLine":32,"endColumn":25},{"ruleId":"86","severity":1,"message":"102","line":6,"column":18,"nodeType":"88","messageId":"89","endLine":6,"endColumn":21},{"ruleId":"86","severity":1,"message":"103","line":6,"column":45,"nodeType":"88","messageId":"89","endLine":6,"endColumn":53},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'postlist' is assigned a value but never used.","'Component' is defined but never used.","'loginUser' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'newUser' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'Nav' is defined but never used.","'MenuItem' is defined but never used.","no-global-assign","no-unsafe-negation"]
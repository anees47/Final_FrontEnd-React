[{"/Users/amitdeb/Downloads/client/client/src/index.js":"1","/Users/amitdeb/Downloads/client/client/src/App.js":"2","/Users/amitdeb/Downloads/client/client/src/reportWebVitals.js":"3","/Users/amitdeb/Downloads/client/client/src/redux/store/store.js":"4","/Users/amitdeb/Downloads/client/client/src/components/layouts/Header.jsx":"5","/Users/amitdeb/Downloads/client/client/src/components/layouts/User.jsx":"6","/Users/amitdeb/Downloads/client/client/src/components/Admin/GetUpdateProduct.jsx":"7","/Users/amitdeb/Downloads/client/client/src/components/layouts/Landing.jsx":"8","/Users/amitdeb/Downloads/client/client/src/components/layouts/Footer.jsx":"9","/Users/amitdeb/Downloads/client/client/src/components/auth/Login.jsx":"10","/Users/amitdeb/Downloads/client/client/src/components/auth/Register.jsx":"11","/Users/amitdeb/Downloads/client/client/src/components/layouts/View.jsx":"12","/Users/amitdeb/Downloads/client/client/src/components/Admin/CreateProduct.jsx":"13","/Users/amitdeb/Downloads/client/client/src/components/Admin/UpdateProduct.jsx":"14","/Users/amitdeb/Downloads/client/client/src/services/AdminApi.js":"15","/Users/amitdeb/Downloads/client/client/src/redux/actions/authAction.js":"16","/Users/amitdeb/Downloads/client/client/src/services/UserApi.js":"17","/Users/amitdeb/Downloads/client/client/src/redux/reducers/index.js":"18","/Users/amitdeb/Downloads/client/client/src/redux/actions/types.js":"19","/Users/amitdeb/Downloads/client/client/src/redux/actions/authheader.js":"20","/Users/amitdeb/Downloads/client/client/src/redux/reducers/authReducer.js":"21","/Users/amitdeb/Downloads/client/client/src/components/Admin/DeleteProduct.jsx":"22"},{"size":500,"mtime":1607377600000,"results":"23","hashOfConfig":"24"},{"size":1778,"mtime":1608139203230,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1607377600000,"results":"26","hashOfConfig":"24"},{"size":609,"mtime":1607646588000,"results":"27","hashOfConfig":"24"},{"size":3275,"mtime":1608139237523,"results":"28","hashOfConfig":"24"},{"size":1167,"mtime":1608068654000,"results":"29","hashOfConfig":"24"},{"size":1802,"mtime":1608091658000,"results":"30","hashOfConfig":"24"},{"size":961,"mtime":1607990796000,"results":"31","hashOfConfig":"24"},{"size":273,"mtime":1607977190000,"results":"32","hashOfConfig":"24"},{"size":2723,"mtime":1608100667084,"results":"33","hashOfConfig":"24"},{"size":4058,"mtime":1608137984989,"results":"34","hashOfConfig":"24"},{"size":1840,"mtime":1608074144000,"results":"35","hashOfConfig":"24"},{"size":2882,"mtime":1608090952000,"results":"36","hashOfConfig":"24"},{"size":3413,"mtime":1608138620983,"results":"37","hashOfConfig":"24"},{"size":852,"mtime":1608140567383,"results":"38","hashOfConfig":"24"},{"size":1206,"mtime":1608076542000,"results":"39","hashOfConfig":"24"},{"size":532,"mtime":1608079844000,"results":"40","hashOfConfig":"24"},{"size":140,"mtime":1607730936000,"results":"41","hashOfConfig":"24"},{"size":296,"mtime":1607990666000,"results":"42","hashOfConfig":"24"},{"size":258,"mtime":1607942046000,"results":"43","hashOfConfig":"24"},{"size":843,"mtime":1607978576000,"results":"44","hashOfConfig":"24"},{"size":1144,"mtime":1608145190611,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"sfk394",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amitdeb/Downloads/client/client/src/index.js",[],["100","101"],"/Users/amitdeb/Downloads/client/client/src/App.js",["102","103"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/layouts/Header\";\nimport Landing from \"./components/layouts/Landing\";\nimport Footer from \"./components/layouts/Footer\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport User from \"./components/layouts/User\";\nimport View from \"./components/layouts/View\";\nimport CreateProduct from \"./components/Admin/CreateProduct\";\nimport DeleteProduct from \"./components/Admin/DeleteProduct\";\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport store from \"./redux/store/store\";\nimport UpdateProduct from \"./components/Admin/UpdateProduct\";\nconst postlist = [\n  { id: 1, content: \"This world will be out of pandemic soon\", user: \"neha\" },\n  { id: 2, content: \"Hello from Neha\", user: \"neharam\" },\n  { id: 3, content: \"How r u\", user: \"neha\" },\n  { id: 4, content: \"Im fine\", user: \"neharam\" },\n];\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Header></Header>\n          <Route exact path=\"/\" component={Landing}></Route>\n          <Route exact path=\"/login\" component={Login}></Route>\n          <Route exact path=\"/register\" component={Register}></Route>\n          <Route exact path=\"/user\" component={User}></Route>\n          <Route exact path=\"/views\" component={View}></Route>\n          <Route exact path=\"/product/create\" component={CreateProduct}></Route>\n          <Route exact path=\"/product/update\" component={UpdateProduct}></Route>\n          <Route exact path=\"/product/delete\" component={DeleteProduct}></Route>\n          <Footer></Footer>\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/amitdeb/Downloads/client/client/src/reportWebVitals.js",[],"/Users/amitdeb/Downloads/client/client/src/redux/store/store.js",[],"/Users/amitdeb/Downloads/client/client/src/components/layouts/Header.jsx",["104","105"],"import React, { Fragment } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../redux/actions/authAction\";\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem } from \"react-bootstrap\";\n\nconst Header = ({ auth: { isAuthenticated }, logout }) => {\n  const value = JSON.parse(localStorage.getItem(\"data\")).roles.includes(\n    \"ROLE_ADMIN\"\n  );\n\n  const adminLinks = (\n    <Navbar>\n      <NavDropdown title=\"Product\">\n        <NavDropdown.Item href=\"/product/create\">\n          Create Product\n        </NavDropdown.Item>\n        <NavDropdown.Item href=\"/product/update\">\n          Update Product\n        </NavDropdown.Item>\n        <NavDropdown.Item href=\"/product/delete\">\n          Delete Product\n        </NavDropdown.Item>\n      </NavDropdown>\n\n      <NavDropdown title=\"Price\">\n        <NavDropdown.Item href=\"/create/product\">Create Price</NavDropdown.Item>\n        <NavDropdown.Item href=\"/deletePrice\">Delete Prrice</NavDropdown.Item>\n      </NavDropdown>\n\n      <NavDropdown title=\"Stock\">\n        <NavDropdown.Item href=\"/createStock\">Create Stock</NavDropdown.Item>\n        <NavDropdown.Item href=\"/deleteStock\">Delete Stock</NavDropdown.Item>\n      </NavDropdown>\n\n      <NavDropdown title=\"Review\">\n        <NavDropdown.Item href=\"/createReview\">Create Review</NavDropdown.Item>\n        <NavDropdown.Item href=\"/deleteReview\">\n          Delete a Review\n        </NavDropdown.Item>\n      </NavDropdown>\n      <NavLink to=\"/findProduct\" style={{ marginRight: 10 }}>\n        Find product\n      </NavLink>\n      <NavItem>\n        <a onClick={logout} href=\"#!\" style={{ marginRight: 10 }}>\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\n          <span className=\"hide-sm\">Logout</span>\n        </a>\n      </NavItem>\n    </Navbar>\n  );\n  const userLinks = (\n    <Navbar>\n      <NavLink to=\"/user\" style={{ marginRight: 10 }}>\n        Find product\n      </NavLink>\n\n      <NavDropdown title=\"Review\">\n        <NavDropdown.Item href=\"/createReview\">Create Review</NavDropdown.Item>\n        <NavDropdown.Item href=\"/deleteReview\">\n          Delete a Review\n        </NavDropdown.Item>\n      </NavDropdown>\n\n      <NavItem>\n        <a onClick={logout} href=\"/\" style={{ marginRight: 10 }}>\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\n          <span className=\"hide-sm\">Logout</span>\n        </a>\n      </NavItem>\n    </Navbar>\n  );\n\n  const guestLinks = (\n    <Navbar expand=\"lg\">\n      <NavLink to=\"/register\" style={{ marginRight: 10 }}>\n        Register\n      </NavLink>\n\n      <NavLink to=\"/login\" style={{ marginRight: 10 }}>\n        Login\n      </NavLink>\n    </Navbar>\n  );\n\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        <Link to=\"/\">\n          <i className=\"fas fa-code\" /> SunHome\n        </Link>\n      </h1>\n      <Fragment>\n        {isAuthenticated === true\n          ? value\n            ? adminLinks\n            : userLinks\n          : guestLinks}\n      </Fragment>\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","/Users/amitdeb/Downloads/client/client/src/components/layouts/User.jsx",[],"/Users/amitdeb/Downloads/client/client/src/components/Admin/GetUpdateProduct.jsx",["106","107","108","109"],"import React, { useState } from \"react\";\nimport { getupdateProduct } from \"../../services/AdminApi\"\nimport { Redirect } from \"react-router-dom\";\nimport AdminApi from \"../../services/AdminApi\";\n\nconst GetUpdateProduct = (getupdateProduct) => {\n  const [formData, setFormData] = useState({\n    productId: \"\",\n   \n  });\n  const { productId } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    //when state of controller is changing then we are holding that changed value in state\n    //AdminApi.getProductByid(id).then((res)=> console.log(res))\n\n\n    // e.preventDefault();\n    // AdminApi.GetUpdateProduct(GetUpdateProduct).then((res)=>console.log);\n    // console.log(e);\n  };\n  const onSubmit = (e) => {\n     \n  ;\n\n    const GetUpdateProduct = {\n        productId:productId\n    };\n\n\n    \n\n    \n   \n  };\n\n  return (\n    <div className=\"register\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Update Product</h1>\n            <p className=\"lead text-center\">Search for a product ID to update the information</p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Search for a product\"\n                  name=\"productId\"\n                  required\n                  value={productId}\n                  onChange={onChange}\n                />\n              </div>\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GetUpdateProduct;\n",["110","111"],"/Users/amitdeb/Downloads/client/client/src/components/layouts/Landing.jsx",[],"/Users/amitdeb/Downloads/client/client/src/components/layouts/Footer.jsx",[],"/Users/amitdeb/Downloads/client/client/src/components/auth/Login.jsx",["112","113","114"],"import React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/actions/authAction\";\nimport { Redirect } from \"react-router-dom\";\nexport const Login = ({ login, isAuthenticated }) => {\n  //const [data,settterfunction]= useState({initail data})\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n  const { username, password } = formData;\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Final state: \" + username);\n    console.log(\"password\" + password);\n    const loginUser = {\n      username: username,\n      password: password,\n    };\n\n    login(username, password);\n\n    //localStorage.setItem('data',JSON.stringify(response.data))\n  };\n\n  if (isAuthenticated) {\n    const user = JSON.parse(localStorage.getItem(\"data\"));\n    if (user.roles.includes(\"ROLE_ADMIN\")) {\n      return <Redirect to=\"/admin\"></Redirect>;\n    } else {\n      return <Redirect to=\"/user\"></Redirect>;\n    }\n  }\n  return (\n    <div className=\"login\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Log In</h1>\n            <p className=\"lead text-center\">\n              Sign in to your DevConnector account\n            </p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={handleChange}\n                />\n              </div>\n              <input\n                type=\"submit\"\n                value=\"Login\"\n                className=\"btn btn-info btn-block mt-4\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { login })(Login);\n","/Users/amitdeb/Downloads/client/client/src/components/auth/Register.jsx",["115"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../redux/actions/authAction\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Register = ({ registerUser, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    role1: \"\",\n    role2: \"\",\n  });\n  const { username, email, password, password2, role1, role2 } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    //when state of controller is changing then we are holding that changed value in state\n  };\n  const onSubmit = (e) => {\n    const newUser = {\n      username: username,\n      email: email,\n      password: password,\n      role: [role1, role2],\n    };\n    e.preventDefault();\n    console.log(\"hello from submit\");\n    console.log(JSON.stringify(newUser));\n    if (password !== password2) {\n      console.log(\"problem\");\n    } else {\n      //action\n      registerUser(newUser);\n    }\n  };\n  if (isAuthenticated === true) {\n    return <Redirect to=\"/login\"></Redirect>;\n  }\n\n  return (\n    <div className=\"register\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Sign Up</h1>\n            <p className=\"lead text-center\">Create your DevConnector account</p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Name\"\n                  name=\"username\"\n                  required\n                  value={username}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  value={password2}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Role 1\"\n                  name=\"role1\"\n                  value={role1}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Role 2\"\n                  name=\"role2\"\n                  value={role2}\n                  onChange={onChange}\n                />\n              </div>\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  registerUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAusAuthenticated: state.auth.issAuthenticated,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { registerUser })(Register);\n","/Users/amitdeb/Downloads/client/client/src/components/layouts/View.jsx",[],"/Users/amitdeb/Downloads/client/client/src/components/Admin/CreateProduct.jsx",["116","117"],"import React, { useState } from \"react\";\nimport { createProduct } from \"../../services/AdminApi\"\nimport { Redirect } from \"react-router-dom\";\nimport AdminApi from \"../../services/AdminApi\";\n\nconst CreateProduct = (createProduct) => {\n  const [formData, setFormData] = useState({\n    productname: \"\",  \n    category: \"\",\n    description: \"\",\n    expirydate: \"\",\n  });\n  const { productname, category, description, expirydate } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    //when state of controller is changing then we are holding that changed value in state\n  };\n  const onSubmit = (e) => {\n      \n    const newProduct = {\n        productname: productname,\n        category: category,\n        description: description,\n        expirydate: expirydate,\n    }\n    e.preventDefault();\n    AdminApi.createProduct(newProduct).then((res)=>console.log);\n    console.log(e);\n  };\n\n  return (\n    <div className=\"register\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Craete Product</h1>\n            <p className=\"lead text-center\">Create a productt</p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Product Name\"\n                  name=\"productname\"\n                  required\n                  value={productname}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Category\"\n                  name=\"category\"\n                  value={category}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Description\"\n                  name=\"description\"\n                  value={description}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Expiry date\"\n                  name=\"expirydate\"\n                  value={expirydate}\n                  onChange={onChange}\n                />\n              </div>\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProduct;\n","/Users/amitdeb/Downloads/client/client/src/components/Admin/UpdateProduct.jsx",["118","119"],"import React, { useState } from \"react\";\nimport { updateProduct } from \"../../services/AdminApi\";\nimport { Redirect } from \"react-router-dom\";\nimport AdminApi from \"../../services/AdminApi\";\n\nconst UpdateProduct = (updateProduct) => {\n  const [formData, setFormData] = useState({\n    productId: \"\",\n    productname: \"\",\n    category: \"\",\n    description: \"\",\n    expirydate: \"\",\n  });\n  const {\n    productId,\n    productname,\n    category,\n    description,\n    expirydate,\n  } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    //when state of controller is changing then we are holding that changed value in state\n  };\n  const onSubmit = (e) => {\n    //AdminApi.getProductByid(id).then((res)=> console.log(res));\n\n    const updateProduct = {\n      productId: productId,\n      productname: productname,\n      category: category,\n      description: description,\n      expirydate: expirydate,\n    };\n    e.preventDefault();\n    AdminApi.updateProduct(updateProduct).then((res) => console.log(res));\n    console.log(e);\n  };\n\n  return (\n    <div className=\"register\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Update Product</h1>\n            <p className=\"lead text-center\">update product information</p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Product Name\"\n                  name=\"productId\"\n                  required\n                  value={productId}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Product Name\"\n                  name=\"productname\"\n                  required\n                  value={productname}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Category\"\n                  name=\"category\"\n                  value={category}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Description\"\n                  name=\"description\"\n                  value={description}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Expiry date\"\n                  name=\"expirydate\"\n                  value={expirydate}\n                  onChange={onChange}\n                />\n              </div>\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateProduct;\n","/Users/amitdeb/Downloads/client/client/src/services/AdminApi.js",[],"/Users/amitdeb/Downloads/client/client/src/redux/actions/authAction.js",[],"/Users/amitdeb/Downloads/client/client/src/services/UserApi.js",[],"/Users/amitdeb/Downloads/client/client/src/redux/reducers/index.js",[],"/Users/amitdeb/Downloads/client/client/src/redux/actions/types.js",[],"/Users/amitdeb/Downloads/client/client/src/redux/actions/authheader.js",[],"/Users/amitdeb/Downloads/client/client/src/redux/reducers/authReducer.js",["120","121","122","123"],"import {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  ACCESS_SUCCESS,\n} from \"../actions/types\";\nimport authHeader from \"../actions/authheader\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  loading: true,\n  user: null,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return { ...state, ...payload, isAuthenticated: true };\n    case LOGIN_SUCCESS:\n      return { ...state, ...payload, isAuthenticated: true };\n    case LOGOUT:\n      return { ...state, token: null, isAuthenticated: false, user: null };\n\n    case LOGOUT:\n      return {\n        ...state,\n        token: localStorage.getItem(\"token\"),\n        isAuthenticated: true,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/amitdeb/Downloads/client/client/src/components/Admin/DeleteProduct.jsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":17,"column":7,"nodeType":"130","messageId":"131","endLine":17,"endColumn":15},{"ruleId":"128","severity":1,"message":"133","line":6,"column":18,"nodeType":"130","messageId":"131","endLine":6,"endColumn":21},{"ruleId":"128","severity":1,"message":"134","line":6,"column":45,"nodeType":"130","messageId":"131","endLine":6,"endColumn":53},{"ruleId":"128","severity":1,"message":"135","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":26},{"ruleId":"128","severity":1,"message":"136","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"137","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":16},{"ruleId":"128","severity":1,"message":"138","line":27,"column":11,"nodeType":"130","messageId":"131","endLine":27,"endColumn":27},{"ruleId":"124","replacedBy":"139"},{"ruleId":"126","replacedBy":"140"},{"ruleId":"128","severity":1,"message":"141","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"142","line":18,"column":11,"nodeType":"130","messageId":"131","endLine":18,"endColumn":20},{"ruleId":"128","severity":1,"message":"143","line":88,"column":7,"nodeType":"130","messageId":"131","endLine":88,"endColumn":25},{"ruleId":"128","severity":1,"message":"143","line":130,"column":7,"nodeType":"130","messageId":"131","endLine":130,"endColumn":25},{"ruleId":"128","severity":1,"message":"144","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":23},{"ruleId":"128","severity":1,"message":"136","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"145","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":23},{"ruleId":"128","severity":1,"message":"136","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"146","line":5,"column":3,"nodeType":"130","messageId":"131","endLine":5,"endColumn":17},{"ruleId":"128","severity":1,"message":"147","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":18},{"ruleId":"148","severity":1,"message":"149","line":15,"column":1,"nodeType":"150","endLine":35,"endColumn":3},{"ruleId":"151","severity":1,"message":"152","line":25,"column":5,"nodeType":"153","messageId":"154","endLine":31,"endColumn":9},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'postlist' is assigned a value but never used.","'Nav' is defined but never used.","'MenuItem' is defined but never used.","'getupdateProduct' is defined but never used.","'Redirect' is defined but never used.","'AdminApi' is defined but never used.","'GetUpdateProduct' is assigned a value but never used.",["155"],["156"],"'Component' is defined but never used.","'loginUser' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'createProduct' is defined but never used.","'updateProduct' is defined but never used.","'ACCESS_SUCCESS' is defined but never used.","'authHeader' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-global-assign","no-unsafe-negation"]